version: "3.8"
services:
  order:
    build:
      context: ./order
    mem_limit: 512m
    ports:
      - "8100-8102:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_USERNAME=logistapi
      - DB_PASSWORD=logistapi
      - DB_HOST=mongo-order
      - DB_PORT=27017
      - SERVER_PORT=8080
    env_file:
      - var.env
    depends_on:
      - mongo-order
      - eureka
    networks:
      - internal
    profiles:
      - prod
  mongo-order:
    image: mongo:5.0.22
    ports:
      - '27020:27017'
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_DATABASE=logist-api-order
      - MONGO_INITDB_ROOT_USERNAME=logistapi
      - MONGO_INITDB_ROOT_PASSWORD=logistapi
    volumes:
      - ./order/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - internal
    profiles:
      - prod
  product:
    build:
      context: ./product
    mem_limit: 512m
    ports:
      - "8200-8202:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_USERNAME=logistapi
      - DB_PASSWORD=logistapi
      - DB_URL=postgres-product:5432
      - SERVER_PORT=8081
    env_file:
      - var.env
    depends_on:
      postgres-product:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - internal
    profiles:
      - test
      - qa
  postgres-product:
    container_name: postgres-product
    image: postgres:13.3
    environment:
      POSTGRES_DB: "logist-api-product"
      POSTGRES_USER: "logistapi"
      POSTGRES_PASSWORD: "logistapi"
    ports:
      - "5433:5432"
    networks:
      - internal
    profiles:
      - test
      - qa
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d logist-api-product -U logistapi"]
      interval: 10s
      timeout: 3s
      retries: 3
  warehouse:
    build:
      context: ./warehouse
    mem_limit: 512m
    ports:
      - "8300-8302:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_USERNAME=logistapi
      - DB_PASSWORD=logistapi
      - DB_URL=postgres-warehouse:5432
      - SERVER_PORT=8082
    env_file:
      - var.env
    depends_on:
      postgres-warehouse:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - internal
    profiles:
      - qa
  postgres-warehouse:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "logist-api-warehouse"
      POSTGRES_USER: "logistapi"
      POSTGRES_PASSWORD: "logistapi"
    ports:
      - "5434:5432"
    networks:
      - internal
    profiles:
      - qa
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d logist-api-warehouse -U logistapi"]
      interval: 10s
      timeout: 3s
      retries: 3
  auth-server:
    build:
      context: ./auth-server
    mem_limit: 512m
    ports:
      - "8400-8402:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_USERNAME=logistapi
      - DB_PASSWORD=logistapi
      - DB_NAME=logist-api-users
      - DB_URL=postgres-users:5432
      - SERVER_PORT=8083
    env_file:
      - var.env
    depends_on:
      postgres-warehouse:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - internal
    profiles:
      - test
      - qa
  postgres-users:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "logist-api-users"
      POSTGRES_USER: "logistapi"
      POSTGRES_PASSWORD: "logistapi"
    ports:
      - "5435:5432"
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d logist-api-users -U logistapi" ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - test
      - qa
  eureka:
    build:
      context: ./eureka-server
    environment:
      - EUREKA_SERVER_HOST=eureka
      - EUREKA_SERVER_PORT=8761
    mem_limit: 512m
    ports:
      - "8761:8761"
    networks:
      - internal
    profiles:
      - test
      - qa
  gateway:
    env_file:
      - var.env
    build:
      context: ./gateway
    mem_limit: 512m
    ports:
      - "8000:8080"
    depends_on:
      - eureka
      - order
      - warehouse
      - product
      - auth-server
    networks:
      - internal
    profiles:
      - test
      - qa
networks:
  internal:


